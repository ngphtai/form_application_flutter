name: Flutter CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #setup language
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"

      - name: Install dependencies
        run: flutter pub get

      - name: bundle install
        run: bundle install
        working-directory: android

      - name: Setup Bundler
        run: |
          bundle init
          echo "gem 'fastlane'" >> Gemfile
          echo "gem 'fastlane-plugin-firebase_app_distribution'" >> Gemfile
          bundle install --path vendor/bundle

      - name: Setup Fastlane
        working-directory: android
        run: |
          mkdir -p fastlane
          echo "${{ secrets.FASTFILE }}" > fastlane/Fastfile

      - name: Install fastlane
        run: sudo gem install fastlane

      - name: Install Bundler dependencies
        run: |
          bundle install --path vendor/bundle

      # - name: Add Firebase App Distribution Plugin # neu chua cai fastlane distribution
      #   working-directory: android
      #   run: |
      #     bundle exec fastlane add_plugin firebase_app_distribution

      - name: Ensure assets directory exists
        run: mkdir -p assets

      - name: Create credentials.json
        run: echo "${{ secrets.CREDENTIALS_JSON }}" > assets/credentials.json

      # - name: Build APK
      #   run: flutter build apk --release

      # - name: Archive APK
      #   run: mv build/app/outputs/flutter-apk/app-release.apk app-release.apk

      # - name: Create GitHub Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: 'release-${{ github.run_number }}-${{ github.sha }}'
      #     release_name: 'Release ${{ github.run_number }}'
      #     body: |
      #       This release includes the latest APK for the application.
      #     draft: false
      #     prerelease: false

      # - name: Delete existing tag (if exists)
      #   run: |
      #     git tag -d release-${{ github.run_number }}-${{ github.sha }} || true
      #     git push origin :refs/tags/release-${{ github.run_number }}-${{ github.sha }} || true

      # - name: Upload APK to Release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: app-release.apk
      #     asset_name: app-release.apk
      #     asset_content_type: application/apk

      - name: Fastlane upload firebase distribute
        env:
          FIREBASE_APP_ID: ${{ secrets.ENV.FIREBASE_APP_ID }}
          FIREBASE_CLI_TOKEN: ${{ secrets.ENV.FIREBASE_CLI_TOKEN }}
        working-directory: android
        run: bundle exec fastlane run_firebase_distribute
